This is a tiny project that allows you to use Rails migrations in non-Rails (and non Ruby) projects. I created it because while not all of my clients use Rails, I still think Rails migrations are the best way to manage a database schema. For this code to work you need Ruby, Gems, ActiveRecord, and a suitable database driver installed.

I just got the this working to the point where it met my needs but if you'd like to contribute patches to make it better please do! One thing that would be great would be a new_migration script that works just like "script/generate migration"

INSTALLATION
------------
Most Linux systems have pre-existing packages for Ruby and Ruby gems so in most cases that should be pretty straightforward. Once Ruby and Gem is installed, as root run:
gem install -y activerecord mysql

cd standalone-migrations/config
cp database_sample.yml database.yml
edit database.yml (and change settings for your database)
cd ../
./migrate (this will just create the schema_migrations table)

DOCUMENTATION
-------------
A good source to learn how to use migrations is:
http://dizzy.co.uk/ruby_on_rails/cheatsheets/rails-migrations
or if you're lazy you can just use the execute method to execute raw SQL

def self.up
  execute "insert into foo values (123,'something');"
end

def self.down
  execute "delete from foo where field='something';"
end


USAGE
-----
To create a new database migration run:

./new_migration us_131_some_project

This will create migrations/XXXXXXXXXXXXXX_us_131_some_project.rb

edit migrations/XXXXXXXXXXXXXX_us_131_some_project.rb

and fill in the up and down migrations. To apply your newest migration

./migrate 

To migrate to a specific version (for example to rollback)

./migrate VERSION=20081220234130  
